
@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRentalForm">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customerTB" name="customerTB" required type="text" value="" class="form-control" /> @*data-rule-validCustomer="true"*@
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movieTB" name="movieTB" type="text" value="" class="form-control" />@*data-rule-atLeastOneMovie="true"*@
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="moviesList" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {

            var customerTemp;

            var viewModel = {
                movies: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',//the wildcard represents the input of the user in the input html tag
                    wildcard: '%QUERY'
                }
            });

            $('#customerTB').typeahead(
            {
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',//Name property
                display: 'name',//what property of our customers, should display in the suggestion list
                source: customers //is customers from Bloodhound
            }).on("typeahead:select", function (e, customer) {
                viewModel.customerId = customer.id;
                customerTemp = customer;
                if (customer.numberOfRentedMovies >= 3)
                    toastr.warning("This client already has rented the limit of movies.");
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movieTB').typeahead(
                {
                    minLength: 3,
                    highlight: true
                }, {
                name: 'movies',//Name property
                display: 'name',//what property of our customers, should display in the suggestion list
                source: movies //is customers from Bloodhound
            }).on("typeahead:select", function (e, movie) {
                if (customerTemp.numberOfRentedMovies >= 3)
                    toastr.warning("This client has reach the limit of rented movies.");

                else {
                    $("#moviesList").append("<li class='list-group-item'>" + movie.name + "</li>");
                    $("#movieTB").typeahead("val", "");
                    viewModel.movies.push(movie.id);
                    customerTemp.numberOfRentedMovies++;
                }
            });

            $.validator.addMethod("validCustomer", function () {
                return viewModel.customerId && viewModel.customerId !== 0;
            }, "Please select a valid customer.");

            $.validator.addMethod("atLeastOneMovie", function () {
                return viewModel.movies.length > 0;
            }, "Please select a valid movie.");

            var validator = $("#newRentalForm").validate({
                rules: {
                    customerTB: { required: true, validCustomer: true },
                    movieTB: { atLeastOneMovie: true }
                },

                submitHandler: function () {
                    $.ajax({
                        url: "/api/rentals/rentMovie",
                        method: "post",
                        data: viewModel
                    })
                    .done(function () {
                        toastr.success("Rentals successfully recorded.");

                        //get customer and movie input fields
                        $("#customerTB").typeahead("val", "");
                        $("#movieTB").typeahead("val", "");
                        $("#moviesList").empty();

                        viewModel = { movies: [] };

                        validator.resetForm();
                    })
                    .fail(function () {
                        toastr.error("Something unexpected happend.");
                    });

                    return false;// es lo mismo que e.preventDefault();
                }
            });
        });
    </script>
}